from pathlib import Path
import yaml
import ressources.globals  # Import des variables globales d√©finies dans globals.py

# Liste des dossiers dans lesquels les fichiers doivent √©ventuellement √™tre supprim√©s
folders = [
    "videos",
    "videos/fixed",
    "videos/csv",
    "programs/ressources/self_grooming_mice/project_folder/videos",
    "programs/ressources/self_grooming_mice/project_folder/logs",

    # Dossiers de sortie utilis√©s dans SimBA pour stocker les r√©sultats
    "programs/ressources/self_grooming_mice/project_folder/frames/output/live_data_table",
    "programs/ressources/self_grooming_mice/project_folder/frames/output/ROI_analysis",
    "programs/ressources/self_grooming_mice/project_folder/frames/output/sklearn_results",

    # Dossiers CSV utilis√©s pour stocker diff√©rentes √©tapes de traitement
    "programs/ressources/self_grooming_mice/project_folder/csv/machine_results",
    "programs/ressources/self_grooming_mice/project_folder/csv/input_csv",
    "programs/ressources/self_grooming_mice/project_folder/csv/features_extracted",
    "programs/ressources/self_grooming_mice/project_folder/csv/outlier_corrected_movement_location"
]

# Fichiers que l'on ne doit jamais supprimer (nom sans extension)
protected_files = {"video_info", "project_log"}

# Suppression des fichiers dans les dossiers, uniquement si keep_files est d√©sactiv√©
if not ressources.globals.keep_files:
    for folder in folders:
        path = Path(folder)
        for file in path.glob("*"):  # Parcourt de tous les fichiers du dossier
            if file.is_file():
                if file.stem in protected_files:
                    print(f"‚õî Skipped protected file: {file.name}")
                    continue
                try:
                    file.unlink()  # Suppression du fichier
                    print(f"üóëÔ∏è Deleted: {file.name}")
                except Exception as e:
                    print(f"‚ùå Failed to delete {file.name}: {e}")


# === Nettoyage du fichier de configuration DeepLabCut ===

# Chemin vers le fichier config.yaml de DeepLabCut
dlc_config_path = Path("programs/ressources/model/config.yaml")

# Chargement du fichier YAML
with open(dlc_config_path, "r") as f:
    config = yaml.safe_load(f)

# R√©initialisation de la section "video_sets" (permet de supprimer tous les anciens chemins de vid√©os)
config["video_sets"] = {}

# Sauvegarde du fichier YAML modifi√©
with open(dlc_config_path, "w") as f:
    yaml.dump(config, f, default_flow_style=False)

print("üóëÔ∏è All video_sets removed from config.yaml.")
